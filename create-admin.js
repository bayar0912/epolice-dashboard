const { PrismaClient } = require('@prisma/client')
const bcrypt = require('bcryptjs')

const prisma = new PrismaClient()

async function createAdmin() {
  try {
    // Check if admin user already exists
    const existingAdmin = await prisma.user.findFirst({
      where: {
        role: 'superadmin'
      }
    })

    if (existingAdmin) {
      console.log('‚úÖ SuperAdmin —Ö—ç—Ä—ç–≥–ª—ç–≥—á –∞–ª—å —Ö—ç–¥–∏–π–Ω –±–∞–π–Ω–∞:')
      console.log(`   –ò-–º—ç–π–ª: ${existingAdmin.email}`)
      console.log(`   –ù—ç—Ä: ${existingAdmin.name}`)
      console.log(`   –†–æ–ª—å: ${existingAdmin.role}`)
      return
    }

    // Hash password
    const hashedPassword = await bcrypt.hash('admin123', 12)

    // Create admin user
    const admin = await prisma.user.create({
      data: {
        name: '–°–∏—Å—Ç–µ–º–∏–π–Ω –∞–¥–º–∏–Ω',
        email: 'admin@police.gov.mn',
        password: hashedPassword,
        role: 'superadmin',
        status: 'active',
        badge: 'ADMIN001',
        location: '–£–ª–∞–∞–Ω–±–∞–∞—Ç–∞—Ä —Ö–æ—Ç',
        cases: 0
      }
    })

    console.log('‚úÖ –ê–¥–º–∏–Ω —Ö—ç—Ä—ç–≥–ª—ç–≥—á –∞–º–∂–∏–ª—Ç—Ç–∞–π “Ø“Ø—Å–≥—ç–≥–¥–ª—ç—ç!')
    console.log('üìß –ò-–º—ç–π–ª: admin@police.gov.mn')
    console.log('üîë –ù—É—É—Ü “Ø–≥: admin123')
    console.log('üë§ –†–æ–ª—å: superadmin')
    console.log('')
    console.log('‚ö†Ô∏è  –ê–ù–•–ê–ê–†–£–£–õ–ì–ê: –ù—É—É—Ü “Ø–≥–∏–π–≥ –∞—é—É–ª–≥“Ø–π–Ω “Ø“Ø–¥–Ω—ç—ç—Å ”©”©—Ä—á–∏–ª–Ω”© “Ø“Ø!')

  } catch (error) {
    console.error('‚ùå –ê–¥–º–∏–Ω “Ø“Ø—Å–≥—ç—Ö—ç–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞:', error)
  } finally {
    await prisma.$disconnect()
  }
}

createAdmin()
